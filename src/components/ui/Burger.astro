---

---

<div class="menu-btn">
	<div class="menu-btn__burger"></div>
</div>

<script>
	let root = document.documentElement;
	const body = document.body;
	const navbarSecond = document.querySelector('.secondary-navbar') as HTMLElement;
	const menuBtn = document.querySelector('.menu-btn') as HTMLDivElement;

	let menuOpen = false;

	const toggleMenu = (state: boolean) => {
		!menuOpen ? menuBtn.classList.add('open') : menuBtn.classList.remove('open');
		menuOpen = state;
	};

	let menuOpenTimeout: ReturnType<typeof setTimeout>;
	let scrollbarWidth: number;

	menuBtn.addEventListener('click', () => {
		if (!menuOpen) {
			scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
			toggleMenu(true);
			navbarSecond.style.display = 'block';
			if (menuOpenTimeout) {
				clearTimeout(menuOpenTimeout); // Clear the previous timeout.
			}
			menuOpenTimeout = setTimeout(() => {
				navbarSecond.setAttribute('aria-hidden', 'false');
				root.style.setProperty('--scrollbar-width', `${scrollbarWidth}px`);
				body.setAttribute('style', `overflow-y: hidden; `);
			}, 10); // Timer to ensure transitions work correctly
		} else {
			toggleMenu(false);
			navbarSecond.setAttribute('aria-hidden', 'true');
			if (menuOpenTimeout) {
				clearTimeout(menuOpenTimeout); // Clear the previous timeout.
			}
			menuOpenTimeout = setTimeout(() => {
				navbarSecond.style.display = 'none';
			}, 1000); // Timer to ensure transitions work correctly
		}
		root.style.setProperty('--scrollbar-width', `0px`);
		body.setAttribute('style', `overflow-y: visible;`);
	});
</script>

<style lang="scss">
	.menu-btn {
		z-index: 1002;
		position: relative;
		margin-right: var(--scrollbar-width);
		display: flex;
		justify-content: center;
		align-items: center;
		cursor: pointer;
	}

	.menu-btn {
		width: 40px;
		height: 30px;
		@include mq('sm') {
			width: 50px;
			height: 50px;
		}
	}

	.menu-btn__burger {
		background: $__sub;
	}

	.menu-btn__burger,
	.menu-btn__burger::before,
	.menu-btn__burger::after {
		width: 100%;
		height: 1px;
		transition: all 0.5s ease-in-out;
	}

	.menu-btn__burger::before,
	.menu-btn__burger::after {
		background: $__main;
	}

	.menu-btn__burger::before,
	.menu-btn__burger::after {
		content: '';
		position: absolute;
	}

	/* Burger Animation  */

	/* remove the middle line burger */
	.menu-btn.open .menu-btn__burger {
		transform: translateX(
			0
		); /* If translateX(0), should delete translate(x,y) in ::before and ::after */
		background: transparent;
		box-shadow: none;
	}

	.menu-btn__burger::before,
	.menu-btn__burger::after {
		transition:
			rotate 200ms 0ms ease,
			translate 200ms 200ms ease;
	}

	.menu-btn__burger::before {
		translate: 0 -9px;
		@include mq('sm') {
			translate: 0 -14px;
		}
		@include mq('md') {
			translate: 0 -11px;
		}
	}

	.menu-btn__burger::after {
		translate: 0 9px;
		@include mq('sm') {
			translate: 0 14px;
		}
		@include mq('md') {
			translate: 0 11px;
		}
	}

	.menu-btn.open .menu-btn__burger::before,
	.menu-btn.open .menu-btn__burger::after {
		translate: 0 0;
		transition:
			translate 200ms 0ms ease,
			rotate 300ms 200ms ease;
	}

	/* transform the burger to a X */
	.menu-btn.open .menu-btn__burger::before {
		rotate: 25deg;
		@include mq('sm') {
			rotate: 35deg;
		}
		@include mq('md') {
			rotate: 25deg;
		}
	}
	.menu-btn.open .menu-btn__burger::after {
		rotate: -25deg;
		@include mq('sm') {
			rotate: -35deg;
		}
		@include mq('md') {
			rotate: -25deg;
		}
	}
	/* Burger Animation END */
	/* Burger END */

	.menu-btn:not(.open):hover {
		.menu-btn__burger::before {
			animation: 350ms expandWidth 100ms forwards ease-out;
		}
		.menu-btn__burger::after {
			animation: 250ms expandWidth 200ms forwards ease-out;
		}
	}
</style>
