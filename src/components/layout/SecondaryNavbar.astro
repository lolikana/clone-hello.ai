---
import { dataNavbarLink } from '@libs/data';

import NavbarActions from './NavbarActions.astro';
import NavbarLinks from './NavbarLinks.astro';
---

<nav
	class="secondary-navbar"
	role="navigation"
	aria-label="secondary-navigation"
	aria-hidden="true"
>
	<div class="secondary-nav__container">
		<NavbarActions class="navbar__actions_display" />
		<div class="secondary-navbar__list">
			<ul class="secondary-navbar__list_items">
				{
					dataNavbarLink.map((link, index) => (
						<NavbarLinks
							link={link}
							index={index}
							class="secondary-navbar__list_item"
							class2="item_link"
						/>
					))
				}
				<li class="secondary-navbar__list_item secondary-navbar__list_bottomLinks">
					<a
						href="/"
						class="item-link translate-transition hover-underline"
						style={`--delay: ${(dataNavbarLink.length + 0.5) * 0.2}s`}>Home</a
					>
					<a
						href="contact"
						class="item-link translate-transition hover-underline"
						style={`--delay: ${(dataNavbarLink.length + 1.5) * 0.2}s`}
					>
						Contact
					</a>
				</li>
			</ul>
		</div>
	</div>
</nav>

<style lang="scss">
	.secondary-navbar {
		@include position(fixed, 0, 0, 0, 0);
		height: 0;
	}

	.secondary-navbar[aria-hidden='true'] {
		z-index: -1;
		overflow: hidden;
		background-color: transparent;
		transition-delay: height calc($__secondaryNav_transition / 2);
		transition: all $__secondaryNav_transition calc($__secondaryNav_transition / 2)
			ease-in-out;

		.secondary-nav__container {
			opacity: 0;
			transition: opacity calc($__secondaryNav_transition / 2) ease-in;
		}

		.secondary-navbar__list_item {
			.translate-transition {
				translate: 0 100%;
				transition: translate $__secondaryNav_transition ease;
			}
		}
	}

	.secondary-navbar[aria-hidden='false'] {
		z-index: 1001;
		height: 100%;
		background-color: rgba(0, 0, 0, 1);
		transition: background-color calc($__secondaryNav_transition / 2) 0s ease-in;

		.secondary-nav__container {
			opacity: 1;
			transition: opacity $__secondaryNav_transition calc($__secondaryNav_transition / 2)
				ease-in;
		}

		.secondary-navbar__list_item {
			.translate-transition {
				translate: 0 0%;
				transition: translate $__secondaryNav_transition var(--delay) ease;
			}
		}
	}

	.secondary-nav__container {
		padding-inline: 2vw;
		height: 100%;
		display: flex;
		flex-direction: column;
	}

	.secondary-nav__container .navbar__actions_display {
		@include mq('custom1024') {
			display: none;
		}
	}

	.secondary-navbar__list,
	.secondary-navbar__list_items {
		transition: all calc($__secondaryNav_transition / 3) ease-in;
	}

	.secondary-navbar__list {
		margin: auto 0;
		padding-left: 3vw;
		width: 100%;
		font-size: 10vw;
		@include mq('md') {
			font-size: $__font50;
			padding-left: $__layout_paddingLeftDesktop;
		}
	}

	.secondary-navbar__list_items {
		margin-top: -$__header_heightMobile;
		display: flex;
		flex-direction: column;
		gap: 40px;
		@include mq('md') {
			margin-top: -5rem;
		}
	}

	.secondary-navbar__list_item {
		overflow: hidden;
		display: inline-flex;
		.item-link {
			line-height: 1.3;
		}
		.item-link::before {
			font-size: 4vw;
			margin-right: 1rem;
			@include mq('md') {
				font-size: $__font20;
			}
		}
	}

	.secondary-navbar__list_bottomLinks {
		font-size: $__font20;
		.item-link {
			margin-right: 1.5rem;
			line-height: 1.7;
		}
	}
</style>
